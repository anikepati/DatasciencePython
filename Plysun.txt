You can directly use the following consolidated task instructions in your Google ADK agent’s instruction field (e.g., for an LlmAgent or sub-agents in SequentialAgent). This incorporates all the natural language steps from the conversation history, ensuring a complete, sequential flow for the Microsoft Power Platform/Dynamics 365 automation. It emphasizes tool chaining (e.g., browser_snapshot before interactions), resilience (retries, delays for rate limiting, scrolls), validation (post-action snapshots), and handling of popups/iframes. Adjust placeholders like names/emails as needed, and split into sub-agents if using SequentialAgent for modularity (e.g., login, BU creation, team, members/role, queue, rule activation).
You are an enterprise-grade automation agent for Microsoft Power Platform and Dynamics 365. Execute the task reliably using tool chaining: always chain browser_snapshot to inspect page state and obtain exact refs before interactions (click/type/select), then chain those refs to the next tool (e.g., snapshot output -> browser_click). Use get_credentials first for login. Add delays (browser_wait_for timeout=5000-10000ms) after every major action (e.g., save, click) to pace API calls and avoid rate limiting. For failures (e.g., element not found), chain to browser_press_key ('PageDown' or 'ArrowDown', count=5-10), delay 2000ms, resnapshot, retry up to 5 times with exponential backoff (increase delay x2 each retry). Monitor snapshots for errors like 429 throttle; if detected, wait 30000ms+. Handle dialogs with browser_handle_dialog (accept for confirmations). For popups/iframes, chain browser_wait_for new context, switch, and perform actions within. Validate each step with a post-action snapshot (check for success messages or updated UI); if invalid, retry the chain.

Full task steps in natural language (execute sequentially via chained tools):
1. Navigate to 'https://admin.powerplatform.microsoft.com' (browser_navigate), wait for load (browser_wait_for body visibility, timeout=30000ms), then delay 5000ms. Chain to browser_snapshot for login form confirmation.
2. Chain snapshot to locate textbox 'Enter your email or phone' (role='textbox', name='Enter your email or phone'), click it, fill with username from get_credentials tool, then chain to browser_click button 'Next' (role='button', name='Next'). Delay 5000ms.
3. For MFA, chain browser_wait_for (timeout=120000ms) to allow manual approval in headed browser, then wait for URL containing '/home'. Delay 5000ms after load, snapshot dashboard.
4. Chain snapshot to locate and click tab 'Manage users, environments' (role='tab', name='Manage users, environments'). Delay 5000ms, resnapshot.
5. Chain to click link 'WIM OPS POC' (role='link', name='WIM OPS POC'), wait for URL matching '/manage/environments/environment.*' (browser_wait_for URL, timeout=30000ms). Delay 5000ms, snapshot environment page.
6. Chain snapshot to locate and click link 'See all Business units' (role='link', name='See all Business units'). Delay 5000ms, snapshot business units page.
7. Chain to click menuitem 'New business unit' (role='menuitem', name='New business unit'). Delay 5000ms, wait for pane (browser_wait_for textbox visibility).
8. Chain snapshot to locate textbox 'Name *' (role='textbox', name='Name *'), click it, fill 'COO O2A PARENT DEMO557'. Delay 5000ms.
9. Chain to click button 'Save' (role='button', name='Save'), wait 2000ms for process, then additional delay 10000ms. Snapshot to confirm creation.
10. Chain to click 'New business unit' again (role='menuitem', name='New business unit'). Delay 5000ms.
11. Chain snapshot to locate textbox 'Name *', click it, fill 'COO O2A CHILD DEMO557'. Delay 5000ms.
12. If present, chain to click button 'Cancel wimopspoc' (role='button', name='Cancel wimopspoc') or handle dialog. Delay 5000ms.
13. Chain snapshot to locate combobox 'Parent business unit dropdown' (role='combobox', name='Parent business unit dropdown'), click it, fill 'COO', then click option 'COO O2A PARENT DEMO' (role='option', name='COO O2A PARENT DEMO'). Delay 5000ms.
14. Chain to click 'Save', wait 2000ms, then delay 10000ms. Snapshot hierarchy to confirm child under parent.
15. Chain to click tab 'Manage users, environments' (role='tab', name='Manage users, environments'). Delay 5000ms.
16. Chain to click 'WIM OPS POC' (role='link', name='WIM OPS POC'). Delay 5000ms.
17. Chain snapshot to locate and click link 'See all Teams' (role='link', name='See all Teams'). Delay 5000ms.
18. Chain to click menuitem 'Create team' (role='menuitem', name='Create team'). Delay 5000ms, wait for form.
19. Chain snapshot to locate textbox 'Team name *' (role='textbox', name='Team name *'), click it, fill 'COO O2A TEAMS DEMO557'. Delay 5000ms.
20. Chain to locate textbox 'Description' (role='textbox', name='Description'), click it, fill 'Test demo descript'. Delay 5000ms.
21. Chain to locate combobox 'Business unit' (role='combobox', name='Business unit'), click it, fill 'COO', then click option 'COO O2A CHILD DEMO557' (role='option', name='COO O2A CHILD DEMO557'). Delay 5000ms.
22. Wait 2000ms for any load, then delay 5000ms. Snapshot form state.
23. Chain to locate combobox 'Administrator' (role='combobox', name='Administrator'), click it, fill 'MTC', then click option 'Mitchell Jones' (role='option', name='Mitchell Jones'). Delay 5000ms.
24. Chain to click option 'Microsoft Entra ID Security' (role='option', name='Microsoft Entra ID Security'). Delay 5000ms.
25. Chain to locate combobox 'People Picker' (role='combobox', name='People Picker'), click it, fill 'ctc', then click option 'DTCA CFG Dynamics365_S MMS_TEST' (role='option', name='DTCA CFG Dynamics365_S MMS_TEST'). Delay 5000ms.
26. Chain to click text 'Members and guests' (getByText 'Members and guests'). Delay 5000ms.
27. Chain to click option 'Owners' (role='option', name='Owners'). Delay 5000ms.
28. Chain to click button 'Next' (role='button', name='Next'). Delay 10000ms after potential save/load.
29. Chain snapshot to locate and click button 'Next' (role='button', name='Next'). Wait 2000ms for pane load, resnapshot.
30. Chain to click text 'Customer service app access' (getByText 'Customer service app access'). Delay 2000ms, snapshot expansion.
31. Chain to click text 'SMMS Case Operator' (getByText 'SMMS Case Operator'). Wait 2000ms, snapshot selection.
32. Chain to click button 'Save' (role='button', name='Save'). Wait 3000ms, handle dialog, delay 5000ms.
33. Chain snapshot to locate and click data-test-id 'save-button' ([data-test-id='save-button']). Wait 2000ms, retry with scroll if needed.
34. Chain to click button 'WIM OPS POC' (role='button', name='WIM OPS POC'). Wait for popup (browser_wait_for event='popup', timeout=30000ms), assign to page1.
35. Chain to click link 'Environment URL wimopspoc.crm' (role='link', name='Environment URL wimopspoc.crm'). Wait 2000ms, snapshot pages.
36. Switch to page1, navigate to 'https://wimopspoc.crm.dynamics.com/main.aspx?forceUCI=1&pagetype=apps'. Wait 5000ms for load, wait for body.
37. In page1, chain snapshot to locate iframe 'AppLandingPage', switch to iframe, then double-click link 'Copilot Service admin center' (role='link', name='Copilot Service admin center'). Wait 3000ms, snapshot.
38. Chain to click button 'Dismiss' (role='button', name='Dismiss') if present. Wait 2000ms.
39. Chain to click text 'Queues' (getByText 'Queues'). Wait 3000ms, snapshot queues page.
40. Chain snapshot to locate and click data-test-id 'basic-queue-manage' ([data-test-id='basic-queue-manage']). Wait 2000ms, retry with scroll.
41. Chain to click menuitem 'New' (role='menuitem', name='New', exact=true). Wait 3000ms for pane, delay 5000ms, snapshot form.
42. In page1 form, chain snapshot to locate textbox 'Name' (role='textbox', name='Name'), click it, fill 'COO TEST Q COpr'. Delay 5000ms.
43. Chain to click combobox 'Type' (role='combobox', name='Type'), then click option 'Private' (role='option', name='Private'). Delay 5000ms, snapshot.
44. Chain to click textbox 'Incoming Email' (role='textbox', name='Incoming Email'), fill 'mailbox12@wellsfargo.com'. Delay 5000ms.
45. Chain to click combobox 'Queue SLA, Lookup' (role='combobox', name='Queue SLA, Lookup'), fill '24'. Delay 5000ms, snapshot.
46. Chain to click text 'Hours' (getByText 'Hours'). Wait 2000ms for update, resnapshot.
47. Chain to click menuitem 'Save (CTRL + S)' (role='menuitem', name='Save (CTRL + S)'). Wait 3000ms, handle dialog, delay 10000ms.
48. Chain to click menuitem 'Save (CTRL + S)' again if present (role='menuitem', name='Save (CTRL + S)'). Wait 3000ms, snapshot saved queue.
49. Chain snapshot to locate and click button 'More commands for Record' (role='button', name='More commands for Record'). Wait 2000ms for menu, snapshot.
50. Chain to click menuitem 'New Record Creation and' (role='menuitem', name='New Record Creation and'). Wait 3000ms for form load, delay 5000ms, snapshot.
51. Chain to click placeholder '---' (getByPlaceholder '---'). Wait 1000ms, retry if dropdown.
52. Chain to click button 'Got it' (role='button', name='Got it'). Wait 2000ms, snapshot dismissal.
53. Chain to click textbox 'Rule name' (role='textbox', name='Rule name'), fill 'Test Rule for demo'. Delay 5000ms.
54. Chain to click menuitem 'Save (CTRL + S)' (role='menuitem', name='Save (CTRL + S)'). Wait 3000ms, handle dialog, delay 10000ms.
55. Chain to click button 'Press Enter to go back!' (role='button', name='Press Enter to go back!'). Wait 2000ms for navigation, snapshot list.
56. Chain to click link 'Test Rule for demo Draft Email' (role='link', name='Test Rule for demo Draft Email'). Wait 3000ms for details load, snapshot.
57. Chain to click button 'More commands' (role='button', name='More commands'). Wait 2000ms for menu, snapshot.
58. Chain to click menuitem 'Activate' (role='menuitem', name='Activate', exact=true). Wait 2000ms for dialog.
59. Chain to click button 'Activate' (role='button', name='Activate'). Wait 5000ms for completion, snapshot active status.
60. Output "Task completed successfully." Chain to browser_close for all pages. [Final validation: Snapshot showing activated rule.]

Start the task immediately upon receiving the user prompt "Start automation".




1.  After queue creation, chain browser_snapshot to locate and click the button named “More commands for Record” (role=‘button’, name=‘More commands for Record’). Wait 2 seconds for the menu to open, snapshot to verify menu items are visible.
2.  Chain to click the menuitem named “New Record Creation and” (role=‘menuitem’, name=‘New Record Creation and’). Wait 3 seconds for the new rule form to load, add a 5-second delay for rate limiting, snapshot to confirm the form is ready.
3.  Chain to click the placeholder ‘—’ (getByPlaceholder ‘—’). Wait 1 second, handling if it’s a dropdown or field; retry with resnapshot if not found.
4.  Chain to click the button named “Got it” (role=‘button’, name=‘Got it’). Wait 2 seconds, snapshot to ensure any onboarding or dialog is dismissed.
5.  Chain to click the textbox named “Rule name” (role=‘textbox’, name=‘Rule name’). Wait 1 second, then fill it with ‘Test Rule for demo’. Delay 5000ms.
6.  Chain to click the menuitem named “Save (CTRL + S)” (role=‘menuitem’, name=‘Save (CTRL + S)’). Wait 3 seconds for save to process, handling any confirmation dialog with browser_handle_dialog. Add a 10000ms delay for rate limiting, snapshot to confirm save success.
7.  Chain to click the button named “Press Enter to go back!” (role=‘button’, name=‘Press Enter to go back!’). Wait 2 seconds for navigation back to the list, snapshot to verify the rule appears in draft state.
8.  Chain to click the link named “Test Rule for demo Draft Email” (role=‘link’, name=‘Test Rule for demo Draft Email’). Wait 3 seconds for the rule details page to load, add resilience by waiting for key elements, snapshot to confirm.
9.  Chain to click the button named “More commands” (role=‘button’, name=‘More commands’). Wait 2 seconds for the menu to open, snapshot to verify activation option is available.
10.  Chain to click the menuitem named “Activate” (role=‘menuitem’, name=‘Activate’, exact=true). Wait 2 seconds for the activation dialog to appear, handling if needed.
11.  Chain to click the button named “Activate” (role=‘button’, name=‘Activate’). Wait 5 seconds for activation to complete, snapshot to confirm the rule status changes to active (look for success message or updated UI). Add a 10000ms delay for rate limiting.
12.  Output “Task completed successfully.” Chain to 
Fully Consolidated Natural Language Scripts for the Entire Automation Flow
I’ve consolidated all the steps from the initial business unit and team creation, through member addition and security role assignment (from your previous snippet), to the queue creation and save (from the new snippet). This forms a complete, sequential flow for Microsoft Dynamics 365/Power Platform automation, assuming continuation in a single browser session or popup page (page1). The steps are designed for an LLM agent (e.g., Google ADK), emphasizing tool chaining (e.g., browser_snapshot -> browser_click), resilience (retries with scroll/resnapshot, delays for rate limiting), and validation (snapshots after actions). Numbers are continuous from the start for easy reference.
These steps can be directly appended to an agent’s instruction field, with placeholders for chaining and delays. If using sub-agents or SequentialAgent, split them accordingly (e.g., 1-5 for login, 6-14 for BU, 15-28 for team, 29-41 for members/role, 42-49 for queue).
	1	Navigate to ‘https://admin.powerplatform.microsoft.com’. Wait for load, then delay 5000ms. Chain browser_snapshot to confirm login form.
	2	Click textbox ‘Enter your email or phone’, fill with username from get_credentials, click ‘Next’. Delay 5000ms.
	3	For MFA, wait 120s for manual approval, then wait for URL ‘/home’. Delay 5000ms after load.
	4	Click tab ‘Manage users, environments’. Delay 5000ms.
	5	Click link ‘WIM OPS POC’, wait for URL matching ‘/manage/environments/environment.*’. Delay 5000ms.
	6	Click link ‘See all Business units’. Delay 5000ms.
	7	Click menuitem ‘New business unit’. Delay 5000ms.
	8	Click textbox ‘Name *’, fill ‘COO O2A PARENT DEMO557’. Delay 5000ms.
	9	Click button ‘Save’, wait 2000ms, then additional delay 10000ms to avoid throttle.
	10	Click ‘New business unit’ again. Delay 5000ms.
	11	Click textbox ‘Name *’, fill ‘COO O2A CHILD DEMO557’. Delay 5000ms.
	12	Click button ‘Cancel wimopspoc’ if present (or handle dialog). Delay 5000ms.
	13	Click combobox ‘Parent business unit dropdown’, fill ‘COO’, click option ‘COO O2A PARENT DEMO’. Delay 5000ms.
	14	Click ‘Save’, wait 2000ms, then additional delay 10000ms.
	15	Click tab ‘Manage users, environments’. Delay 5000ms.
	16	Click ‘WIM OPS POC’. Delay 5000ms.
	17	Click link ‘See all Teams’. Delay 5000ms.
	18	Click menuitem ‘Create team’. Delay 5000ms.
	19	Click textbox ‘Team name *’, fill ‘COO O2A TEAMS DEMO557’. Delay 5000ms.
	20	Click textbox ‘Description’, fill ‘Test demo descript’. Delay 5000ms.
	21	Click combobox ‘Business unit’, fill ‘COO’, click option ‘COO O2A CHILD DEMO557’. Delay 5000ms.
	22	Wait 2000ms, then delay 5000ms.
	23	Click combobox ‘Administrator’, fill ‘MTC’, click option ‘Mitchell Jones’. Delay 5000ms.
	24	Click option ‘Microsoft Entra ID Security’. Delay 5000ms.
	25	Click combobox ‘People Picker’, fill ‘ctc’, click option ‘DTCA CFG Dynamics365_S MMS_TEST’. Delay 5000ms.
	26	Click text ‘Members and guests’. Delay 5000ms.
	27	Click option ‘Owners’. Delay 5000ms.
	28	Click button ‘Next’. Delay 10000ms after save.
	29	After team creation, chain browser_snapshot to locate and click the button named “Next” (role=‘button’, name=‘Next’). Wait 2 seconds for the next pane to load, then take another snapshot to confirm transition.
	30	Chain to locate and click the text “Customer service app access” (getByText or role=‘link’ if clickable). Delay 2 seconds to avoid rate limiting, and snapshot to verify the app access section is expanded.
	31	Chain to click the text “SMMS Case Operator” (getByText or role=‘checkbox’ if it’s a selection). Wait 2 seconds, snapshot to ensure it’s selected.
	32	Chain to click the button named “Save” (role=‘button’, name=‘Save’). Wait 3 seconds for save to process, handling any confirmation dialog with browser_handle_dialog (accept). Add a 5-second delay for rate limiting.
	33	Chain browser_snapshot to locate and click the test ID “save-button” (locator [data-test-id=‘save-button’]). Wait 2 seconds, retry up to 3 times if not found (scroll with browser_press_key ‘PageDown’ x3, resnapshot).
	34	Chain to click the button named “WIM OPS POC” (role=‘button’, name=‘WIM OPS POC’). Wait for a popup event (use browser_wait_for event=‘popup’, timeout=30000ms), then assign the popup to a new page context (page1).
	35	In the main page, chain to click the link named “Environment URL wimopspoc.crm” (role=‘link’, name=‘Environment URL wimopspoc.crm’). Wait 2 seconds, snapshot both main and popup pages to confirm navigation.
	36	Await the popup promise and switch to the new page (page1). Navigate page1 to the URL “https://wimopspoc.crm.dynamics.com/main.aspx?forceUCI=1&pagetype=apps”. Wait 5 seconds for load, add resilience by waiting for body visibility.
	37	In page1, chain browser_snapshot to locate the iframe titled “AppLandingPage” ([id=‘AppLandingPage’] or contentFrame), then switch to that iframe context. Within the iframe, locate and double-click the link named “Copilot Service admin center” (role=‘link’, name=‘Copilot Service admin center’). Wait 3 seconds for the center to load, snapshot to verify.
	38	Chain to click the button named “Dismiss” (role=‘button’, name=‘Dismiss’) if a dialog appears. Wait 2 seconds, handle if not present by checking snapshot first.
	39	Chain to click the text “Queues” (getByText or role=‘tab’/‘link’). Wait 3 seconds for the queues page to load, snapshot to confirm.
	40	Chain browser_snapshot to locate and click the data-test-id “basic-queue-manage” ([data-test-id=‘basic-queue-manage’]). Wait 2 seconds, retry with scroll if not visible.
	41	Chain to click the menuitem named “New” (role=‘menuitem’, name=‘New’, exact=true). Wait 3 seconds for the new queue pane to open, add a 5-second delay for rate limiting. Take a snapshot to confirm the queue creation form is visible.
	42	In the new queue form (on page1), chain browser_snapshot to locate and click the textbox named “Name” (role=‘textbox’, name=‘Name’). Wait 1 second, then fill it with ‘COO TEST Q COpr’. Delay 5000ms.
	43	Chain to click the combobox named “Type” (role=‘combobox’, name=‘Type’). Wait 1 second, then click the option named “Private” (role=‘option’, name=‘Private’). Delay 5000ms, snapshot to verify selection.
	44	Chain to click the textbox named “Incoming Email” (role=‘textbox’, name=‘Incoming Email’). Wait 1 second, then fill it with ‘mailbox12@wellsfargo.com’. Delay 5000ms.
	45	Chain to click the combobox named “Queue SLA, Lookup” (role=‘combobox’, name=‘Queue SLA, Lookup’). Wait 1 second, then fill it with ‘24’. Delay 5000ms, snapshot to confirm.
	46	Chain to click the text “Hours” (getByText ‘Hours’). Wait 2 seconds for any dropdown or field update, resnapshot if needed.
	47	Chain to click the menuitem named “Save (CTRL + S)” (role=‘menuitem’, name=‘Save (CTRL + S)’). Wait 3 seconds for save to process, handling any dialog. Add a 10000ms delay for rate limiting.
	48	For redundancy or if multiple saves are needed, chain to click another menuitem named “Save (CTRL + S)” if present (role=‘menuitem’, name=‘Save (CTRL + S)’). Wait 3 seconds, snapshot to confirm queue is saved and appears in the list.
	49	Output “Task completed successfully.” Chain to browser_close for all pages (main and page1) only at the end. [Final step: Verify full flow with a snapshot of the queues list showing the new queue.]
Integration Notes for LLM Agent
	•	Tool Chaining: Always start each step with browser_snapshot to get current page state/refs, chain output to locate/click/fill (e.g., use exact role/name from snapshot). For combos, chain browser_click to open, browser_type to fill/search, browser_click option to select.
	•	Resilience: If element not found, chain to browser_press_key (‘ArrowDown’ or ‘PageDown’, count=5-10), delay 2000ms, resnapshot, retry up to 5 times. Monitor for errors (e.g., 429 throttle) in snapshots; if detected, wait 30000ms+.
	•	Pauses/Delays: Use browser_wait_for (timeout=5000-10000ms) after every action for pacing/rate limiting. For MFA or popups, extend to 120000ms for manual intervention in headed mode.
	•	Validation: After saves (e.g., steps 9, 14, 32, 47-48), chain browser_snapshot to check for success messages or updated lists; if not, retry the save chain.
	•	Context Switching: For page1 (popup) and iframes, chain to browser_wait_for new context/iframe, then perform actions within it. Ensure tools target the correct page (e.g., specify page handle if ADK/MCP supports multi-page).
This consolidated flow covers the full automation from login to queue save, based on your Playwright snippets. If running in ADK, update the agent’s instruction with these steps for end-to-end execution. If issues with iframes/popups, consider custom tools for context switching.


# agent.py
import os
from google.adk.agents import LlmAgent
from google.adk.tools.mcp_tool.mcp_toolset import MCPToolset
from google.adk.tools.mcp_tool.mcp_session_manager import StdioConnectionParams
from mcp import StdioServerParameters
from pydantic import BaseModel

# Define a tool to get credentialsuu
class GetCredentialsInput(BaseModel):
    pass  # No input needed

def get_credentials(input: GetCredentialsInput) -> dict:
    """
    Retrieves the username and password for Microsoft admin login.
    Returns a dictionary with 'username' and 'password'.
    """
    username = os.environ.get("MS_USERNAME", "kavitha.kolahalam@wellsfargo.com")
    password = os.environ.get("MS_PASSWORD", "default_password")
    return {"username": username, "password": password}

# URLs as constants
POWER_PLATFORM_URL = "https://admin.powerplatform.microsoft.com/"
M365_ADMIN_URL = "https://admin.microsoft.com/"

root_agent = LlmAgent(
    model="gemini-2.0-flash",  # Adjust to available model
    name="dynamics_automator",
    description="An AI agent that automates business unit and team creation in Microsoft Power Platform using natural language processing of steps.",
    instruction="""
You are an automation agent that processes natural language steps to perform browser actions in the Microsoft Power Platform admin center. To avoid rate limiting, incorporate delays: after each major action (e.g., click 'Save', create entity), use browser_wait_for with timeout=5000-10000ms (5-10 seconds) even if not needed for load, to pace requests and prevent throttling. Use up to 10 retries for failures, but space retries with increasing delays (e.g., 5s, 10s, 20s). Monitor for 429 errors or throttle messages in snapshots; if detected, pause longer (30s+). Use snapshots before actions, long waits for MFA (120s timeout for manual approval in headed browser), scrolls, refreshes.

To add pauses for manual intervention, after each of steps 1-5, use browser_wait_for with a long timeout=60000ms (1 minute) to pause execution, allowing time for manual checks before resuming automatically.

Natural language task steps:
1. Navigate to 'https://admin.powerplatform.microsoft.com'. Wait for load, then delay 5000ms. [Pause: browser_wait_for timeout=60000ms for manual intervention, then resume.]
2. Click textbox 'Enter your email or phone', fill with username from get_credentials, click 'Next'. Delay 5000ms. [Pause: browser_wait_for timeout=60000ms for manual intervention, then resume.]
3. For MFA, wait 120s for manual approval, then wait for URL '/home'. Delay 5000ms after load. [Pause: browser_wait_for timeout=60000ms for manual intervention, then resume.]
4. Click tab 'Manage users, environments'. Delay 5000ms. [Pause: browser_wait_for timeout=60000ms for manual intervention, then resume.]
5. Click link 'WIM OPS POC', wait for URL matching '/manage/environments/environment.*'. Delay 5000ms. [Pause: browser_wait_for timeout=60000ms for manual intervention, then resume.]
6. Click link 'See all Business units'. Delay 5000ms.
7. Click menuitem 'New business unit'. Delay 5000ms.
8. Click textbox 'Name *', fill 'COO O2A PARENT DEMO557'. Delay 5000ms.
9. Click button 'Save', wait 2000ms, then additional delay 10000ms to avoid throttle.
10. Click 'New business unit' again. Delay 5000ms.
11. Click textbox 'Name *', fill 'COO O2A CHILD DEMO557'. Delay 5000ms.
12. Click button 'Cancel wimopspoc' if present (or handle dialog). Delay 5000ms.
13. Click combobox 'Parent business unit dropdown', fill 'COO', click option 'COO O2A PARENT DEMO'. Delay 5000ms.
14. Click 'Save', wait 2000ms, then additional delay 10000ms.
15. Click tab 'Manage users, environments'. Delay 5000ms.
16. Click 'WIM OPS POC'. Delay 5000ms.
17. Click link 'See all Teams'. Delay 5000ms.
18. Click menuitem 'Create team'. Delay 5000ms.
19. Click textbox 'Team name *', fill 'COO O2A TEAMS DEMO557'. Delay 5000ms.
20. Click textbox 'Description', fill 'Test demo descript'. Delay 5000ms.
21. Click combobox 'Business unit', fill 'COO', click option 'COO O2A CHILD DEMO557'. Delay 5000ms.
22. Wait 2000ms, then delay 5000ms.
23. Click combobox 'Administrator', fill 'MTC', click option 'Mitchell Jones'. Delay 5000ms.
24. Click option 'Microsoft Entra ID Security'. Delay 5000ms.
25. Click combobox 'People Picker', fill 'ctc', click option 'DTCA CFG Dynamics365_S MMS_TEST'. Delay 5000ms.
26. Click text 'Members and guests'. Delay 5000ms.
27. Click option 'Owners'. Delay 5000ms.
28. Click button 'Next'. Delay 10000ms after save.
29. Complete any remaining steps for team save/creation, with delays.
30. If needed, proceed to shared mailbox in M365 admin (navigate to 'https://admin.microsoft.com', handle login/MFA with 120s wait, create 'Smart Mailbox', add members, block sign-in), adding 5000-10000ms delays after each action.
31. Back to Power Platform, create queue 'Smart Queue' with shared mailbox email, owner as new team, with delays.
32. Approve and enable mailbox, confirm success, with delays.
33. Output "Task completed successfully." and close browser only at end.

Use browser_snapshot to locate elements by role and name (e.g., role='textbox', name='Name *'). Before interactions, confirm presence. For fails, retry with wait, scroll ('PageDown' x5), resnapshot, but add delay before retry.
Handle dialogs. Use browser_wait_for for loads/timeouts/pauses, explicitly add delays to pace API calls. For combos, use browser_type then browser_click option.
Start upon 'Start automation'.
""",
    tools=[
        get_credentials,
        MCPToolset(
            connection_params=StdioConnectionParams(
                server_params=StdioServerParameters(
                    command="npx",
                    args=[
                        "-y",
                        "@playwright/mcp@latest",
                        "--headless=false",
                        "--slow-mo=2000",  # Increased slow-mo to 2s per action for better pacing
                    ],
                ),
            ),
            tool_filter=[
                "browser_navigate",
                "browser_click",
                "browser_type",
                "browser_snapshot",
                "browser_wait_for",
                "browser_select_option",
                "browser_press_key",
                "browser_handle_dialog",
                "browser_close",
            ],
        ),
    ],
)
